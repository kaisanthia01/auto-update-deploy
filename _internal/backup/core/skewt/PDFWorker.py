import os
import datetime
from PyQt6.QtCore import pyqtSignal, QThread
from controls.CheckOpenText import CheckOpenText  # ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ Class ‡∏à‡∏≤‡∏Å‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå CheckOpenText
from controls.CheckURLSkewT import CheckURLSkewT  # ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ Class ‡∏à‡∏≤‡∏Å‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå CheckURLSkewT
from controls.PlotText import PlotText  # ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ Class ‡∏à‡∏≤‡∏Å‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå PlotText
from controls.CheckCodeTTAA import CheckCodeTTAA  # ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ Class ‡∏à‡∏≤‡∏Å‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå CheckCodeTTAA
from controls.CheckCodeTTBB import CheckCodeTTBB  # ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ Class ‡∏à‡∏≤‡∏Å‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå CheckCodeTTBB
from controls.CheckArrayTEMP import (
    CheckArrayTEMP,
)  # ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ Class ‡∏à‡∏≤‡∏Å‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå CheckArrayTEMP
from controls.CheckArrayWND import CheckArrayWND  # ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ Class ‡∏à‡∏≤‡∏Å‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå CheckArrayWND
from controls.PlotMarker import PlotMarker  # ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ Class ‡∏à‡∏≤‡∏Å‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå PlotMarker
from controls.PlotLine import PlotLine  # ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ Class ‡∏à‡∏≤‡∏Å‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå PlotLine
from controls.PlotWnd import PlotWnd  # ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ Class ‡∏à‡∏≤‡∏Å‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå PlotWnd


class PDFWorker(QThread):
    text_update = pyqtSignal(str)  # ‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á MainWindow
    load_pdf_signal = pyqtSignal(str)  # ‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏Å‡πÉ‡∏´‡πâ PDFViewer ‡πÇ‡∏´‡∏•‡∏î PDF

    def __init__(
        self, pdf, page, width, height, station, time, date, string_plot, checkOpenText
    ):
        super().__init__()
        self.pdf = pdf
        self.doc = page
        self.station = station
        self.time = time
        self.date = date
        self.width = width
        self.height = height
        self.plot = string_plot
        self.checkOpenText = checkOpenText
        self.temp_file = None  # ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå PDF ‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß

    def run(self):
        self.text_update.emit(
            f"üü° Plotting Skew-T Log-P Diagram Processing... 0%"
        )  # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á MainWindow
        """‡∏ß‡∏≤‡∏î marker ‡∏ö‡∏ô PDF ‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô Temp"""
        if self.doc:
            self.text_update.emit(
                f"üü° Plotting Skew-T Log-P Diagram Processing... 1%"
            )  # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á MainWindow
            try:
                page = self.doc  # ‡∏î‡∏∂‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å‡∏Ç‡∏≠‡∏á PDF
                station_num = self.station[:5]
                station_name = self.station[7:11]
                time = self.time
                date = self.date
                image_width = self.width
                image_height = self.height
                plot = self.plot
                checkOpenText = self.checkOpenText
                self.text_update.emit(
                    f"üü° Plotting Skew-T Log-P Diagram Processing... 2%"
                )  # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á MainWindow

                if checkOpenText != None:
                    # ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô CheckOpenText
                    checkText = CheckOpenText()
                    resultURL = checkText.urlGetContent(station_num, checkOpenText)
                    self.text_update.emit(
                        f"üü° CheckOpenText Upper-air Observations... 10%"
                    )  # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á MainWindow
                else:
                    # ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô CheckURLSkewT
                    checkURLSkewT = CheckURLSkewT()
                    resultURL = checkURLSkewT.urlGetContent(station_num, time, date)
                    # print(resultURL)
                    # print("/*---------------------------------*/")
                    self.text_update.emit(
                        f"üü° CheckURLSkewT Upper-air Observations... 10%"
                    )  # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á MainWindow

                if "NIL" in resultURL["TTAA"] and "NIL" in resultURL["TTBB"]:
                    self.text_update.emit(
                        f"‚ùå Error: {station_num} {time} {date} NIL="
                    )  # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á MainWindow
                    self.load_pdf_signal.emit(
                        "Skew-T-Log-P-BlackAndWhite.pdf"
                    )  # ‡∏™‡πà‡∏á path ‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå PDF
                    return

                # ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô CheckCodeTTAA
                checkCodeTTAA = CheckCodeTTAA()
                resultTTAA = checkCodeTTAA.decodeTTAA(resultURL["TTAA"])
                # print(resultTTAA)
                # print("/*---------------CheckCodeTTAA------------------*/")
                self.text_update.emit(
                    f"üü° CheckCodeTTAA - Upper-air Observations... 30%"
                )  # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á MainWindow

                # ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô CheckCodeTTBB
                checkCodeTTBB = CheckCodeTTBB()
                resultTTBB = checkCodeTTBB.decodeTTBB(resultURL["TTBB"])
                # print(resultTTBB)
                # print("/*---------------CheckCodeTTBB------------------*/")
                self.text_update.emit(
                    f"üü° CheckCodeTTBB - Upper-air Observations... 40%"
                )  # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á MainWindow

                # ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô CheckArrayTEMP
                checkArrayTEMP = CheckArrayTEMP()
                resultArrayTEMP = checkArrayTEMP.decodeArrayTEMP(
                    resultTTAA["temp"], resultTTBB["temp"]
                )
                # print(resultArrayTEMP)
                # print("/*---------------CheckArrayTEMP------------------*/")
                self.text_update.emit(
                    f"üü° CheckArrayTEMP Plot Skew-T Log-P Diagram... 50%"
                )  # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á MainWindow

                # ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô CheckArrayWND
                checkArrayWND = CheckArrayWND()
                resultArrayWND = checkArrayWND.decodeArrayWND(
                    resultTTAA["wnd"], resultTTBB["wnd"]
                )
                # print(resultArrayWND)
                # print("/*---------------CheckArrayWND------------------*/")
                self.text_update.emit(
                    f"üü° CheckArrayWND - Upper-air Observations... 60%"
                )  # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á MainWindow

                # ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô PlotText
                plotText = PlotText()
                plotText.plotNewsDraw(
                    page,
                    image_width,
                    image_height,
                    station_num,
                    station_name,
                    time,
                    date,
                    resultURL["TTAA"],
                    resultURL["TTBB"],
                )
                # print("/*---------------resultPlotText------------------*/")
                self.text_update.emit(
                    f"üü° Plotting Text - Upper-air Observations... 70%"
                )  # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á MainWindow

                # ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô PlotMarker
                plotMarker = PlotMarker()
                resultMarker = plotMarker.plotMakerDraw(
                    page,
                    image_width,
                    image_height,
                    plot,
                    resultArrayTEMP,
                )
                # print(resultMarker)
                # print("/*---------------PlotMarker------------------*/")
                self.text_update.emit(
                    f"üü° Plotting Marker - Upper-air Observations... 80%"
                )  # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á MainWindow

                # ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô PlotLine
                plotLine = PlotLine()
                plotLine.plotLineDraw(
                    page,
                    image_width,
                    image_height,
                    resultMarker,
                )
                # print("/*---------------PlotLine------------------*/")
                self.text_update.emit(
                    f"üü° Plotting Line - Upper-air Observations... 90%"
                )  # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á MainWindow

                # ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô PlotWnd
                plotWnd = PlotWnd()
                plotWnd.plotWndDraw(
                    page,
                    image_width,
                    image_height,
                    plot,
                    resultArrayWND,
                )
                # print("/*---------------PlotWnd------------------*/")
                self.text_update.emit(
                    f"üü° Plotting Wind - Upper-air Observations... 100%"
                )  # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á MainWindow

                # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å PDF ‡πÉ‡∏´‡∏°‡πà
                user_profile = os.environ["USERPROFILE"]
                timestamp = datetime.datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
                temp_folder = os.path.join(user_profile, "AppData", "Local", "Temp")
                self.temp_file = os.path.join(
                    temp_folder,
                    f"Skew-T-Temp-{station_num}-{time[0:4]}-{timestamp}.pdf",
                )

                # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å PDF ‡πÉ‡∏´‡∏°‡πà
                self.pdf.save(self.temp_file)
                # print(f"Saved PDF with markers to: {self.temp_file} ‚úîÔ∏è")

                self.text_update.emit(
                    f"üü° Success: {self.temp_file}"
                )  # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á MainWindow

                # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡πÇ‡∏´‡∏•‡∏î PDF ‡πÉ‡∏ô PDFViewer
                self.text_update.emit("üü° Processing complete, Loading PDF Files...")
                # ‡∏™‡πà‡∏á‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡πÑ‡∏õ‡∏¢‡∏±‡∏á PDFViewer ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå PDF
                self.load_pdf_signal.emit(self.temp_file)  # ‡∏™‡πà‡∏á path ‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå PDF
                # print(f"Loaded PDF with markers from: {self.temp_file} ‚úîÔ∏è")

            except Exception as e:
                # print(f"Error in _draw_markers_on_pdf: {e}") ‚ùå
                self.text_update.emit(f"‚ùå Error: {e}")  # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á MainWindow


# ---------------------------------------------------------------------------------------------------------------------------------#
